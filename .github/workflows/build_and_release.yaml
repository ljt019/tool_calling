name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Run cargo tests
        run: cargo test --locked --verbose

  doc_tests:
    name: Run Documentation Tests
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Run cargo doc tests
        run: cargo test --doc --locked --verbose

  build:
    name: Build Release Artifacts
    needs: doc_tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Build release
        run: cargo build --release --locked

  publish_to_crates_io:
    name: Publish to crates.io
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Publish tool_calling_macros crate
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
        run: |
          cd tool_calling_macros
          cargo publish
          cd .. # Go back to the root directory

      - name: Extract derive crate version
        id: get_derive_version
        run: echo "::set-output name=version::$(grep '^version =' tool_calling_macros/Cargo.toml | cut -d '"' -f 2)"

      - name: Update Cargo.toml for main crate dependency
        run: sed -i 's|tool_calling_macros = {.*path.*}|tool_calling_macros = "${{ steps.get_derive_version.outputs.version }}"|' Cargo.toml

      - name: Publish tool_calling crate
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
        run: cargo publish

  create_github_release:
    name: Create Github Release
    needs: publish_to_crates_io
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract version from Cargo.toml
        id: get_version
        run: echo "::set-output name=version::$(grep '^version =' Cargo.toml | cut -d '"' -f 2)"

      - name: Create Github Release
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ steps.get_version.outputs.version }}
          token: ${{ secrets.GITHUB_TOKEN }}
